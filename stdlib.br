[import lib.stdlib lib]
[import [lib.stdlib add mul sub div gt lt lte gte exit cons symbol pformat dropv count apply]]
[import [naga append conj first last rest get drop assoc mapv partition]]

[def < lt]
[def > gt]
[def <= lte]
[def >= gte]
[def eq? lib/eqq]
[def = lib/eq]
[def != lib/neq]

[def empty? lib/empty]

[def false? lib/false_]

[def not lib/not_]

[def list? lib/listp]

[def null? lib/nullp]

[def symbol? lib/symbolp]

[def list lib/list_]

[def to-list lib/to_list]

[def bool? lib/boolean]

[def bool py/bool]

[def range py/range]

[def . py/getattr]

[defn butlast [x] [[. x __getitem__] [py/slice 0 -1]]]

[defn assert
    [[exp res]     [let [msg [pformat 'expecting {}, got {}' exp res]]
                     [assert exp res msg]]]
    [[exp res msg] [if [= exp res]
                       #t
                       [begin [print msg] #f]]]]


[defn hashmap [[] [py/dict]]
          [[. xs] [py/dict [partition 2 xs]]]]

[defn into [[]    []]
           [[x]   [into [py/list] x]]
           [[a b] [if [empty? b]
                      a
                      [into [conj a [first b]]
                            [rest b]]]]]

[defn print [[x]      [py/print x]]
            [[x . xs] [apply py/print x xs]]]

;[defmacro and
;   [[] #t]
;   [[x] x]
;   [[x . xs]
;    [print [list x xs]]
;    `[if [empty? xs]
;         x
;         [if [false? x]
;              x
;              [apply and xs]]]]]
